{"ast":null,"code":"var _jsxFileName = \"/Users/johnnynguyen/instagram-clone/src/components/post/Post.js\";\nimport React from \"react\";\nimport { usePostStyles } from \"../../styles\";\nimport UserCard from \"../shared/UserCard\";\nimport { MoreIcon, CommentIcon, ShareIcon, UnlikeIcon, LikeIcon, RemoveIcon, SaveIcon } from \"../../icons\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Button, Hidden, Divider, TextField, Avatar } from \"@material-ui/core\";\nimport OptionsDialog from \"../shared/OptionsDialog\"; // import { defaultPost } from \"../../data\";\n\nimport PostSkeleton from \"./PostSkeleton\";\nimport { useSubscription, useMutation } from \"@apollo/react-hooks\";\nimport { GET_POST } from \"../../graphql/subscriptions\";\nimport { UserContext } from \"../../App\";\nimport { LIKE_POST, UNLIKE_POST } from \"../../graphql/mutations\";\nimport { formatDateToNowShort, formatPostDate } from \"../../utils/formatDate\";\nimport Img from \"react-graceful-image\";\n\nfunction Post({\n  postId\n}) {\n  const classes = usePostStyles(); // const [loading, setLoading] = React.useState(true);\n\n  const [showOptionsDialog, setOptionsDialog] = React.useState(false);\n  const variables = {\n    postId\n  };\n  const {\n    data,\n    loading\n  } = useSubscription(GET_POST, {\n    variables\n  }); // setTimeout(() => setLoading(false), 2000);\n\n  if (loading) return React.createElement(PostSkeleton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n  const {\n    id,\n    media,\n    likes,\n    likes_aggregate,\n    saved_posts,\n    location,\n    user,\n    caption,\n    comments,\n    created_at\n  } = data.posts_by_pk;\n  const likesCount = likes_aggregate.aggregate.count;\n  return React.createElement(\"div\", {\n    className: classes.postContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    className: classes.article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(UserCard, {\n    user: user,\n    location: location,\n    avatarSize: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(MoreIcon, {\n    className: classes.moreIcon,\n    onClick: () => setOptionsDialog(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.postImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Img, {\n    src: media,\n    alt: \"Post media\",\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.postButtonsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(LikeButton, {\n    likes: likes,\n    postId: id,\n    authorId: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: `/p/${id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(CommentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(SaveButton, {\n    savedPosts: saved_posts,\n    postId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    className: classes.likes,\n    variant: \"subtitle2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, likesCount === 1 ? \"1 like\" : `${likesCount} likes`)), React.createElement(\"div\", {\n    style: {\n      overflowY: \"scroll\",\n      padding: \"16px 12px\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(AuthorCaption, {\n    user: user,\n    createdAt: created_at,\n    caption: caption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), comments.map(comment => React.createElement(UserComment, {\n    key: comment.id,\n    comment: comment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.datePosted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, formatPostDate(created_at)), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.comment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Comment, {\n    postId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))))), showOptionsDialog && React.createElement(OptionsDialog, {\n    postId: id,\n    authorId: user.id,\n    onClose: () => setOptionsDialog(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n}\n\nfunction AuthorCaption({\n  user,\n  caption,\n  createdAt\n}) {\n  const classes = usePostStyles();\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: user.profile_image,\n    alt: \"User avatar\",\n    style: {\n      marginRight: 14,\n      width: 32,\n      height: 32\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column \"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, user.username), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    className: classes.postCaption,\n    style: {\n      paddingLeft: 0\n    },\n    dangerouslySetInnerHTML: {\n      __html: caption\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    style: {\n      marginTop: 16,\n      marginBottom: 4,\n      display: \"inline-block\"\n    },\n    color: \"textSecondary\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, formatDateToNowShort(createdAt))));\n}\n\nfunction UserComment({\n  comment\n}) {\n  const classes = usePostStyles();\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: comment.user.profile_image,\n    alt: \"User avatar\",\n    style: {\n      marginRight: 14,\n      width: 32,\n      height: 32\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column \"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${comment.user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, comment.user.username), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    className: classes.postCaption,\n    style: {\n      paddingLeft: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, comment.content)), React.createElement(Typography, {\n    style: {\n      marginTop: 16,\n      marginBottom: 4,\n      display: \"inline-block\"\n    },\n    color: \"textSecondary\",\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, formatDateToNowShort(comment.created_at))));\n}\n\nfunction LikeButton({\n  likes,\n  authorId,\n  postId\n}) {\n  const classes = usePostStyles();\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const onClick = liked ? handleUnlike : handleLike;\n  const [likePost] = useMutation(LIKE_POST);\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId\n  };\n\n  function handleLike() {\n    // console.log(\"like\");\n    setLiked(true);\n    likePost({\n      variables\n    });\n  }\n\n  function handleUnlike() {\n    // console.log(\"unlike\");\n    setLiked(false);\n    unlikePost({\n      variables\n    });\n  }\n\n  return React.createElement(Icon, {\n    className: className,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  });\n}\n\nfunction SaveButton({\n  savedPosts,\n  postId\n}) {\n  const classes = usePostStyles();\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n  const onClick = saved ? handleRemove : handleSave; // const [savePost] = useMutation(SAVE_POST);\n  // const [unsavePost] = useMutation(UNSAVE_POST);\n\n  const variables = {\n    postId,\n    userId: currentUserId\n  };\n\n  function handleSave() {\n    // console.log(\"save\");\n    setSaved(true); // savePost({ variables });\n  }\n\n  function handleRemove() {\n    // console.log(\"remove\");\n    setSaved(false); // unsavePost({ variables });\n  }\n\n  return React.createElement(Icon, {\n    className: classes.saveIcon,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  });\n}\n\nfunction Comment({\n  postId\n}) {\n  const classes = usePostStyles();\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const [content, setContent] = React.useState(\"\");\n  const [createComment] = useMutation(CREATE_COMMENT);\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    };\n    createComment({\n      variables\n    });\n    setContent(\"\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.commentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    value: content,\n    placeholder: \"Add a comment...\",\n    multiline: true,\n    rowsMax: 2,\n    rows: 1,\n    onChange: event => setContent(event.target.value),\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        root: classes.root,\n        underline: classes.underline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleAddComment,\n    color: \"primary\",\n    className: classes.commentButton,\n    disabled: !content.trim(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"Post\"));\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/components/post/Post.js"],"names":["React","usePostStyles","UserCard","MoreIcon","CommentIcon","ShareIcon","UnlikeIcon","LikeIcon","RemoveIcon","SaveIcon","Link","Typography","Button","Hidden","Divider","TextField","Avatar","OptionsDialog","PostSkeleton","useSubscription","useMutation","GET_POST","UserContext","LIKE_POST","UNLIKE_POST","formatDateToNowShort","formatPostDate","Img","Post","postId","classes","showOptionsDialog","setOptionsDialog","useState","variables","data","loading","id","media","likes","likes_aggregate","saved_posts","location","user","caption","comments","created_at","posts_by_pk","likesCount","aggregate","count","postContainer","article","postHeader","moreIcon","postImage","image","postButtonsWrapper","postButtons","overflowY","padding","height","map","comment","datePosted","AuthorCaption","createdAt","display","profile_image","marginRight","width","flexDirection","username","postCaption","paddingLeft","__html","marginTop","marginBottom","UserComment","content","LikeButton","authorId","currentUserId","useContext","isAlreadyLiked","some","user_id","liked","setLiked","Icon","className","like","onClick","handleUnlike","handleLike","likePost","unlikePost","userId","profileId","SaveButton","savedPosts","isAlreadySaved","saved","setSaved","handleRemove","handleSave","saveIcon","Comment","setContent","createComment","CREATE_COMMENT","handleAddComment","commentContainer","event","target","value","textField","root","underline","commentButton","trim"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { usePostStyles } from \"../../styles\";\nimport UserCard from \"../shared/UserCard\";\nimport {\n  MoreIcon,\n  CommentIcon,\n  ShareIcon,\n  UnlikeIcon,\n  LikeIcon,\n  RemoveIcon,\n  SaveIcon\n} from \"../../icons\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Typography,\n  Button,\n  Hidden,\n  Divider,\n  TextField,\n  Avatar\n} from \"@material-ui/core\";\nimport OptionsDialog from \"../shared/OptionsDialog\";\n// import { defaultPost } from \"../../data\";\nimport PostSkeleton from \"./PostSkeleton\";\nimport { useSubscription, useMutation } from \"@apollo/react-hooks\";\nimport { GET_POST } from \"../../graphql/subscriptions\";\nimport { UserContext } from \"../../App\";\nimport { LIKE_POST, UNLIKE_POST } from \"../../graphql/mutations\";\nimport { formatDateToNowShort, formatPostDate } from \"../../utils/formatDate\";\nimport Img from \"react-graceful-image\";\n\nfunction Post({ postId }) {\n  const classes = usePostStyles();\n  // const [loading, setLoading] = React.useState(true);\n  const [showOptionsDialog, setOptionsDialog] = React.useState(false);\n  const variables = { postId };\n  const { data, loading } = useSubscription(GET_POST, { variables });\n\n  // setTimeout(() => setLoading(false), 2000);\n  if (loading) return <PostSkeleton />;\n  const {\n    id,\n    media,\n    likes,\n    likes_aggregate,\n    saved_posts,\n    location,\n    user,\n    caption,\n    comments,\n    created_at\n  } = data.posts_by_pk;\n  const likesCount = likes_aggregate.aggregate.count;\n\n  return (\n    <div className={classes.postContainer}>\n      <article className={classes.article}>\n        {/* Post Header */}\n        <div className={classes.postHeader}>\n          <UserCard user={user} location={location} avatarSize={32} />\n          <MoreIcon\n            className={classes.moreIcon}\n            onClick={() => setOptionsDialog(true)}\n          />\n        </div>\n        {/* Post Image */}\n        <div className={classes.postImage}>\n          <Img src={media} alt=\"Post media\" className={classes.image} />\n        </div>\n        {/* Post Buttons */}\n        <div className={classes.postButtonsWrapper}>\n          <div className={classes.postButtons}>\n            <LikeButton likes={likes} postId={id} authorId={user.id} />\n            <Link to={`/p/${id}`}>\n              <CommentIcon />\n            </Link>\n            <ShareIcon />\n            <SaveButton savedPosts={saved_posts} postId={id} />\n          </div>\n          <Typography className={classes.likes} variant=\"subtitle2\">\n            <span>{likesCount === 1 ? \"1 like\" : `${likesCount} likes`}</span>\n          </Typography>\n          <div\n            style={{\n              overflowY: \"scroll\",\n              padding: \"16px 12px\",\n              height: \"100%\"\n            }}\n          >\n            <AuthorCaption\n              user={user}\n              createdAt={created_at}\n              caption={caption}\n            />\n            {comments.map(comment => (\n              <UserComment key={comment.id} comment={comment} />\n            ))}\n          </div>\n          <Typography color=\"textSecondary\" className={classes.datePosted}>\n            {formatPostDate(created_at)}\n          </Typography>\n          <Hidden xsDown>\n            <div className={classes.comment}>\n              <Divider />\n              <Comment postId={id} />\n            </div>\n          </Hidden>\n        </div>\n      </article>\n      {showOptionsDialog && (\n        <OptionsDialog\n          postId={id}\n          authorId={user.id}\n          onClose={() => setOptionsDialog(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction AuthorCaption({ user, caption, createdAt }) {\n  const classes = usePostStyles();\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Avatar\n        src={user.profile_image}\n        alt=\"User avatar\"\n        style={{ marginRight: 14, width: 32, height: 32 }}\n      />\n      <div style={{ display: \"flex\", flexDirection: \"column \" }}>\n        <Link to={`/${user.username}`}>\n          <Typography\n            variant=\"subtitle2\"\n            component=\"span\"\n            className={classes.username}\n          >\n            {user.username}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            component=\"span\"\n            className={classes.postCaption}\n            style={{ paddingLeft: 0 }}\n            dangerouslySetInnerHTML={{ __html: caption }}\n          />\n        </Link>\n        <Typography\n          style={{ marginTop: 16, marginBottom: 4, display: \"inline-block\" }}\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          {formatDateToNowShort(createdAt)}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nfunction UserComment({ comment }) {\n  const classes = usePostStyles();\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Avatar\n        src={comment.user.profile_image}\n        alt=\"User avatar\"\n        style={{ marginRight: 14, width: 32, height: 32 }}\n      />\n      <div style={{ display: \"flex\", flexDirection: \"column \" }}>\n        <Link to={`/${comment.user.username}`}>\n          <Typography\n            variant=\"subtitle2\"\n            component=\"span\"\n            className={classes.username}\n          >\n            {comment.user.username}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            component=\"span\"\n            className={classes.postCaption}\n            style={{ paddingLeft: 0 }}\n          >\n            {comment.content}\n          </Typography>\n        </Link>\n        <Typography\n          style={{ marginTop: 16, marginBottom: 4, display: \"inline-block\" }}\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          {formatDateToNowShort(comment.created_at)}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nfunction LikeButton({ likes, authorId, postId }) {\n  const classes = usePostStyles();\n  const { currentUserId } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({ user_id }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const onClick = liked ? handleUnlike : handleLike;\n  const [likePost] = useMutation(LIKE_POST);\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId\n  };\n\n  function handleLike() {\n    // console.log(\"like\");\n    setLiked(true);\n    likePost({ variables });\n  }\n\n  function handleUnlike() {\n    // console.log(\"unlike\");\n    setLiked(false);\n    unlikePost({ variables });\n  }\n\n  return <Icon className={className} onClick={onClick} />;\n}\n\nfunction SaveButton({ savedPosts, postId }) {\n  const classes = usePostStyles();\n  const { currentUserId } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(\n    ({ user_id }) => user_id === currentUserId\n  );\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n  const onClick = saved ? handleRemove : handleSave;\n  // const [savePost] = useMutation(SAVE_POST);\n  // const [unsavePost] = useMutation(UNSAVE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId\n  };\n\n  function handleSave() {\n    // console.log(\"save\");\n    setSaved(true);\n    // savePost({ variables });\n  }\n\n  function handleRemove() {\n    // console.log(\"remove\");\n    setSaved(false);\n    // unsavePost({ variables });\n  }\n\n  return <Icon className={classes.saveIcon} onClick={onClick} />;\n}\n\nfunction Comment({ postId }) {\n  const classes = usePostStyles();\n  const { currentUserId } = React.useContext(UserContext);\n  const [content, setContent] = React.useState(\"\");\n  const [createComment] = useMutation(CREATE_COMMENT);\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    };\n    createComment({ variables });\n    setContent(\"\");\n  }\n\n  return (\n    <div className={classes.commentContainer}>\n      <TextField\n        fullWidth\n        value={content}\n        placeholder=\"Add a comment...\"\n        multiline\n        rowsMax={2}\n        rows={1}\n        onChange={event => setContent(event.target.value)}\n        className={classes.textField}\n        InputProps={{\n          classes: {\n            root: classes.root,\n            underline: classes.underline\n          }\n        }}\n      />\n      <Button\n        onClick={handleAddComment}\n        color=\"primary\"\n        className={classes.commentButton}\n        disabled={!content.trim()}\n      >\n        Post\n      </Button>\n    </div>\n  );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}