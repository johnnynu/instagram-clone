{"ast":null,"code":"var _jsxFileName = \"/Users/johnnynguyen/instagram-clone/src/components/feed/FeedPost.js\";\nimport React from \"react\";\nimport { useFeedPostStyles } from \"../../styles\";\nimport { MoreIcon, CommentIcon, ShareIcon, UnlikeIcon, LikeIcon, RemoveIcon, SaveIcon } from \"../../icons\";\nimport UserCard from \"../shared/UserCard\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Button, Divider, Hidden, TextField } from \"@material-ui/core\";\nimport HTMLEllipsis from \"react-lines-ellipsis/lib/html\";\nimport FollowSuggestions from \"../shared/FollowSuggestions\";\nimport OptionsDialog from \"../shared/OptionsDialog\";\nimport { formatDateToNow } from \"../../utils/formatDate\";\nimport Img from \"react-graceful-image\";\nimport { SAVE_POST, UNSAVE_POST, LIKE_POST, UNLIKE_POST, CREATE_COMMENT } from \"../../graphql/mutations\";\nimport { GET_FEED } from \"../../graphql/queries\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../App\";\n\nfunction FeedPost({\n  post,\n  idx\n}) {\n  const classes = useFeedPostStyles();\n  const [showCaption, setCaption] = React.useState(false);\n  const [showOptionsDialog, setOptionsDialog] = React.useState(false);\n  const {\n    media,\n    id,\n    likes,\n    likes_aggregate,\n    saved_posts,\n    location,\n    user,\n    caption,\n    comments,\n    comments_aggregate,\n    created_at\n  } = post;\n  const showFollowSuggestions = idx === 1;\n  const likesCount = likes_aggregate.aggregate.count;\n  const commentsCount = comments_aggregate.aggregate.count;\n  return React.createElement(React.Fragment, null, React.createElement(\"article\", {\n    className: classes.article,\n    style: {\n      marginBottom: showFollowSuggestions && 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(UserCard, {\n    user: user,\n    location: location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(MoreIcon, {\n    className: classes.moreIcon,\n    onClick: () => setOptionsDialog(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Img, {\n    src: media,\n    alt: \"Post media\",\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.postButtonsWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.postButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(LikeButton, {\n    likes: likes,\n    postId: id,\n    authorId: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: `/p/${id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(CommentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(SaveButton, {\n    savedPosts: saved_posts,\n    postId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    className: classes.likes,\n    variant: \"subtitle2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, likesCount === 1 ? \"1 like\" : `${likesCount} likes`)), React.createElement(\"div\", {\n    className: showCaption ? classes.expanded : classes.collapsed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, user.username)), showCaption ? React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    dangerouslySetInnerHTML: {\n      __html: caption\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: classes.captionWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(HTMLEllipsis, {\n    unsafeHTML: caption,\n    className: classes.caption,\n    maxLine: \"0\",\n    ellipsis: \"...\",\n    basedOn: \"letters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.moreButton,\n    onClick: () => setCaption(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"more\"))), React.createElement(Link, {\n    to: `/p/$id`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.commentsLink,\n    variant: \"body2\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"View all \", commentsCount, \" comments\")), comments.map(comment => React.createElement(\"div\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/${comment.user.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    component: \"span\",\n    className: classes.commentUsername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, comment.user.username), \" \", React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, comment.content)))), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.datePosted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, formatDateToNow(created_at))), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Comment, {\n    postId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), showFollowSuggestions && React.createElement(FollowSuggestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), showOptionsDialog && React.createElement(OptionsDialog, {\n    authorId: user.id,\n    postId: id,\n    onClose: () => setOptionsDialog(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }));\n}\n\nfunction LikeButton({\n  likes,\n  postId,\n  authorId\n}) {\n  const classes = useFeedPostStyles();\n  const {\n    currentUserId,\n    feedIds\n  } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const onClick = liked ? handleUnlike : handleLike;\n  const [likePost] = useMutation(LIKE_POST);\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId\n  };\n\n  function handleUpdate(cache, result) {\n    var _result$data$insert_l;\n\n    const variables = {\n      limit: 2,\n      feedIds\n    };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    }); // console.log({ result, data });\n\n    const typename = (_result$data$insert_l = result.data.insert_likes) === null || _result$data$insert_l === void 0 ? void 0 : _result$data$insert_l.__typename;\n    const count = typename === \"likes_mutation_response\" ? 1 : -1;\n    const posts = data.posts.map(post => ({ ...post,\n      likes_aggregate: { ...post.likes_aggregate,\n        aggregate: { ...post.likes_aggregate.aggregate,\n          count: post.likes_aggregate.aggregate.count + count\n        }\n      }\n    }));\n    cache.writeQuery({\n      query: GET_FEED,\n      data: {\n        posts\n      }\n    });\n  }\n\n  function handleLike() {\n    // console.log(\"like\");\n    setLiked(true);\n    likePost({\n      variables,\n      update: handleUpdate\n    });\n  }\n\n  function handleUnlike() {\n    // console.log(\"unlike\");\n    setLiked(false);\n    unlikePost({\n      variables,\n      update: handleUpdate\n    });\n  }\n\n  return React.createElement(Icon, {\n    className: className,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  });\n}\n\nfunction SaveButton({\n  postId,\n  savedPosts\n}) {\n  const classes = useFeedPostStyles();\n  const {\n    currentUserId\n  } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(({\n    user_id\n  }) => user_id === currentUserId);\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n  const onClick = saved ? handleRemove : handleSave;\n  const [savePost] = useMutation(SAVE_POST);\n  const [removePost] = useMutation(UNSAVE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId\n  };\n\n  function handleSave() {\n    setSaved(true);\n    savePost({\n      variables\n    });\n  }\n\n  function handleRemove() {\n    setSaved(false);\n    removePost({\n      variables\n    });\n  }\n\n  return React.createElement(Icon, {\n    className: classes.saveIcon,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  });\n}\n\nfunction Comment({\n  postId\n}) {\n  const {\n    currentUserId,\n    feedIds\n  } = React.useContext(UserContext);\n  const classes = useFeedPostStyles();\n  const [content, setContent] = React.useState(\"\");\n  const [createComment] = useMutation(CREATE_COMMENT);\n\n  function handleUpdate(cache, result) {\n    const variables = {\n      limit: 2,\n      feedIds\n    };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    });\n    const oldComment = result.data.insert_comments.returning[0];\n    const newComment = { ...oldComment,\n      user: { ...oldComment.user\n      }\n    };\n    const posts = data.posts.map(post => {\n      const newPost = { ...post,\n        comments: [...post.comments, newComment],\n        comments_aggregate: { ...post.comments_aggregate,\n          aggregate: { ...post.comments_aggregate.aggregate,\n            count: post.comments_aggregate.aggregate.count + 1\n          }\n        }\n      };\n      return post.id === postId ? newPost : post;\n    });\n    cache.writeQuery({\n      query: GET_FEED,\n      data: {\n        posts\n      }\n    });\n    setContent(\"\");\n  }\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    };\n    createComment({\n      variables,\n      update: handleUpdate\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.commentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    value: content,\n    placeholder: \"Add a comment...\",\n    multiline: true,\n    rowsMax: 2,\n    rows: 1,\n    onChange: event => setContent(event.target.value),\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        root: classes.root,\n        underline: classes.underline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleAddComment,\n    color: \"primary\",\n    className: classes.commentButton,\n    disabled: !content.trim(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, \"Post\"));\n}\n\nexport default FeedPost;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/components/feed/FeedPost.js"],"names":["React","useFeedPostStyles","MoreIcon","CommentIcon","ShareIcon","UnlikeIcon","LikeIcon","RemoveIcon","SaveIcon","UserCard","Link","Typography","Button","Divider","Hidden","TextField","HTMLEllipsis","FollowSuggestions","OptionsDialog","formatDateToNow","Img","SAVE_POST","UNSAVE_POST","LIKE_POST","UNLIKE_POST","CREATE_COMMENT","GET_FEED","useMutation","UserContext","FeedPost","post","idx","classes","showCaption","setCaption","useState","showOptionsDialog","setOptionsDialog","media","id","likes","likes_aggregate","saved_posts","location","user","caption","comments","comments_aggregate","created_at","showFollowSuggestions","likesCount","aggregate","count","commentsCount","article","marginBottom","postHeader","moreIcon","image","postButtonsWrapper","postButtons","expanded","collapsed","username","__html","captionWrapper","moreButton","commentsLink","map","comment","commentUsername","content","datePosted","LikeButton","postId","authorId","currentUserId","feedIds","useContext","isAlreadyLiked","some","user_id","liked","setLiked","Icon","className","like","onClick","handleUnlike","handleLike","likePost","unlikePost","variables","userId","profileId","handleUpdate","cache","result","limit","data","readQuery","query","typename","insert_likes","__typename","posts","writeQuery","update","SaveButton","savedPosts","isAlreadySaved","saved","setSaved","handleRemove","handleSave","savePost","removePost","saveIcon","Comment","setContent","createComment","oldComment","insert_comments","returning","newComment","newPost","handleAddComment","commentContainer","event","target","value","textField","root","underline","commentButton","trim"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFeedPostStyles } from \"../../styles\";\nimport {\n  MoreIcon,\n  CommentIcon,\n  ShareIcon,\n  UnlikeIcon,\n  LikeIcon,\n  RemoveIcon,\n  SaveIcon\n} from \"../../icons\";\nimport UserCard from \"../shared/UserCard\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Typography,\n  Button,\n  Divider,\n  Hidden,\n  TextField\n} from \"@material-ui/core\";\nimport HTMLEllipsis from \"react-lines-ellipsis/lib/html\";\nimport FollowSuggestions from \"../shared/FollowSuggestions\";\nimport OptionsDialog from \"../shared/OptionsDialog\";\nimport { formatDateToNow } from \"../../utils/formatDate\";\nimport Img from \"react-graceful-image\";\nimport {\n  SAVE_POST,\n  UNSAVE_POST,\n  LIKE_POST,\n  UNLIKE_POST,\n  CREATE_COMMENT\n} from \"../../graphql/mutations\";\nimport { GET_FEED } from \"../../graphql/queries\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UserContext } from \"../../App\";\n\nfunction FeedPost({ post, idx }) {\n  const classes = useFeedPostStyles();\n  const [showCaption, setCaption] = React.useState(false);\n  const [showOptionsDialog, setOptionsDialog] = React.useState(false);\n  const {\n    media,\n    id,\n    likes,\n    likes_aggregate,\n    saved_posts,\n    location,\n    user,\n    caption,\n    comments,\n    comments_aggregate,\n    created_at\n  } = post;\n  const showFollowSuggestions = idx === 1;\n  const likesCount = likes_aggregate.aggregate.count;\n  const commentsCount = comments_aggregate.aggregate.count;\n\n  return (\n    <>\n      <article\n        className={classes.article}\n        style={{ marginBottom: showFollowSuggestions && 30 }}\n      >\n        {/* Feed Post Header */}\n        <div className={classes.postHeader}>\n          <UserCard user={user} location={location} />\n          <MoreIcon\n            className={classes.moreIcon}\n            onClick={() => setOptionsDialog(true)}\n          />\n        </div>\n        {/* Feed Post Image */}\n        <div>\n          <Img src={media} alt=\"Post media\" className={classes.image} />\n        </div>\n        {/* Feed Post Buttons */}\n        <div className={classes.postButtonsWrapper}>\n          <div className={classes.postButtons}>\n            <LikeButton likes={likes} postId={id} authorId={user.id} />\n            <Link to={`/p/${id}`}>\n              <CommentIcon />\n            </Link>\n            <ShareIcon />\n            <SaveButton savedPosts={saved_posts} postId={id} />\n          </div>\n          <Typography className={classes.likes} variant=\"subtitle2\">\n            <span>{likesCount === 1 ? \"1 like\" : `${likesCount} likes`}</span>\n          </Typography>\n          <div className={showCaption ? classes.expanded : classes.collapsed}>\n            <Link to={`/${user.username}`}>\n              <Typography\n                variant=\"subtitle2\"\n                component=\"span\"\n                className={classes.username}\n              >\n                {user.username}\n              </Typography>\n            </Link>\n            {showCaption ? (\n              <Typography\n                variant=\"body2\"\n                component=\"span\"\n                dangerouslySetInnerHTML={{ __html: caption }}\n              />\n            ) : (\n              <div className={classes.captionWrapper}>\n                <HTMLEllipsis\n                  unsafeHTML={caption}\n                  className={classes.caption}\n                  maxLine=\"0\"\n                  ellipsis=\"...\"\n                  basedOn=\"letters\"\n                />\n                <Button\n                  className={classes.moreButton}\n                  onClick={() => setCaption(true)}\n                >\n                  more\n                </Button>\n              </div>\n            )}\n          </div>\n          <Link to={`/p/$id`}>\n            <Typography\n              className={classes.commentsLink}\n              variant=\"body2\"\n              component=\"div\"\n            >\n              View all {commentsCount} comments\n            </Typography>\n          </Link>\n          {comments.map(comment => (\n            <div key={comment.id}>\n              <Link to={`/${comment.user.username}`}>\n                <Typography\n                  variant=\"subtitle2\"\n                  component=\"span\"\n                  className={classes.commentUsername}\n                >\n                  {comment.user.username}\n                </Typography>{\" \"}\n                <Typography variant=\"body2\" component=\"span\">\n                  {comment.content}\n                </Typography>\n              </Link>\n            </div>\n          ))}\n          <Typography color=\"textSecondary\" className={classes.datePosted}>\n            {formatDateToNow(created_at)}\n          </Typography>\n        </div>\n        <Hidden xsDown>\n          <Divider />\n          <Comment postId={id} />\n        </Hidden>\n      </article>\n      {showFollowSuggestions && <FollowSuggestions />}\n      {showOptionsDialog && (\n        <OptionsDialog\n          authorId={user.id}\n          postId={id}\n          onClose={() => setOptionsDialog(false)}\n        />\n      )}\n    </>\n  );\n}\n\nfunction LikeButton({ likes, postId, authorId }) {\n  const classes = useFeedPostStyles();\n  const { currentUserId, feedIds } = React.useContext(UserContext);\n  const isAlreadyLiked = likes.some(({ user_id }) => user_id === currentUserId);\n  const [liked, setLiked] = React.useState(isAlreadyLiked);\n  const Icon = liked ? UnlikeIcon : LikeIcon;\n  const className = liked ? classes.liked : classes.like;\n  const onClick = liked ? handleUnlike : handleLike;\n  const [likePost] = useMutation(LIKE_POST);\n  const [unlikePost] = useMutation(UNLIKE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId,\n    profileId: authorId\n  };\n\n  function handleUpdate(cache, result) {\n    const variables = { limit: 2, feedIds };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    });\n    // console.log({ result, data });\n    const typename = result.data.insert_likes?.__typename;\n    const count = typename === \"likes_mutation_response\" ? 1 : -1;\n    const posts = data.posts.map(post => ({\n      ...post,\n      likes_aggregate: {\n        ...post.likes_aggregate,\n        aggregate: {\n          ...post.likes_aggregate.aggregate,\n          count: post.likes_aggregate.aggregate.count + count\n        }\n      }\n    }));\n    cache.writeQuery({ query: GET_FEED, data: { posts } });\n  }\n\n  function handleLike() {\n    // console.log(\"like\");\n    setLiked(true);\n    likePost({ variables, update: handleUpdate });\n  }\n\n  function handleUnlike() {\n    // console.log(\"unlike\");\n    setLiked(false);\n    unlikePost({ variables, update: handleUpdate });\n  }\n\n  return <Icon className={className} onClick={onClick} />;\n}\n\nfunction SaveButton({ postId, savedPosts }) {\n  const classes = useFeedPostStyles();\n  const { currentUserId } = React.useContext(UserContext);\n  const isAlreadySaved = savedPosts.some(\n    ({ user_id }) => user_id === currentUserId\n  );\n  const [saved, setSaved] = React.useState(isAlreadySaved);\n  const Icon = saved ? RemoveIcon : SaveIcon;\n  const onClick = saved ? handleRemove : handleSave;\n  const [savePost] = useMutation(SAVE_POST);\n  const [removePost] = useMutation(UNSAVE_POST);\n  const variables = {\n    postId,\n    userId: currentUserId\n  };\n\n  function handleSave() {\n    setSaved(true);\n    savePost({ variables });\n  }\n\n  function handleRemove() {\n    setSaved(false);\n    removePost({ variables });\n  }\n\n  return <Icon className={classes.saveIcon} onClick={onClick} />;\n}\n\nfunction Comment({ postId }) {\n  const { currentUserId, feedIds } = React.useContext(UserContext);\n  const classes = useFeedPostStyles();\n  const [content, setContent] = React.useState(\"\");\n  const [createComment] = useMutation(CREATE_COMMENT);\n\n  function handleUpdate(cache, result) {\n    const variables = { limit: 2, feedIds };\n    const data = cache.readQuery({\n      query: GET_FEED,\n      variables\n    });\n    const oldComment = result.data.insert_comments.returning[0];\n    const newComment = {\n      ...oldComment,\n      user: { ...oldComment.user }\n    };\n    const posts = data.posts.map(post => {\n      const newPost = {\n        ...post,\n        comments: [...post.comments, newComment],\n        comments_aggregate: {\n          ...post.comments_aggregate,\n          aggregate: {\n            ...post.comments_aggregate.aggregate,\n            count: post.comments_aggregate.aggregate.count + 1\n          }\n        }\n      };\n      return post.id === postId ? newPost : post;\n    });\n    cache.writeQuery({ query: GET_FEED, data: { posts } });\n    setContent(\"\");\n  }\n\n  function handleAddComment() {\n    const variables = {\n      content,\n      postId,\n      userId: currentUserId\n    };\n    createComment({ variables, update: handleUpdate });\n  }\n\n  return (\n    <div className={classes.commentContainer}>\n      <TextField\n        fullWidth\n        value={content}\n        placeholder=\"Add a comment...\"\n        multiline\n        rowsMax={2}\n        rows={1}\n        onChange={event => setContent(event.target.value)}\n        className={classes.textField}\n        InputProps={{\n          classes: {\n            root: classes.root,\n            underline: classes.underline\n          }\n        }}\n      />\n      <Button\n        onClick={handleAddComment}\n        color=\"primary\"\n        className={classes.commentButton}\n        disabled={!content.trim()}\n      >\n        Post\n      </Button>\n    </div>\n  );\n}\n\nexport default FeedPost;\n"]},"metadata":{},"sourceType":"module"}