{"ast":null,"code":"var _jsxFileName = \"/Users/johnnynguyen/instagram-clone/src/pages/feed.js\";\nimport React from \"react\";\nimport { useFeedPageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport UserCard from \"../components/shared/UserCard\"; // import FeedPost from \"../components/feed/FeedPost\";\n\nimport FeedSideSuggestions from \"../components/feed/FeedSideSuggestions\";\nimport { getDefaultPost } from \"../data\";\nimport { Hidden } from \"@material-ui/core\";\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { LoadingLargeIcon } from \"../icons\";\nimport FeedPostSkeleton from \"../components/feed/FeedPostSkeleton\";\nimport Zuck from \"zuck.js\";\nimport { UserContext } from \"../App\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_FEED } from \"../graphql/queries\";\nimport usePageBottom from \"../utils/usePageBottom\";\nconst FeedPost = React.lazy(() => import(\"../components/feed/FeedPost\"));\n\nfunction FeedPage() {\n  const classes = useFeedPageStyles();\n  const {\n    me,\n    feedIds\n  } = React.useContext(UserContext);\n  const [isEndOfFeed, setEndOfFeed] = React.useState(false);\n  const variables = {\n    feedIds,\n    limit: 2\n  };\n  const {\n    data,\n    loading,\n    fetchMore\n  } = useQuery(GET_FEED, {\n    variables\n  });\n  const isPageBottom = usePageBottom();\n\n  function handleUpdateQuery(prev, {\n    fetchMoreResult\n  }) {\n    if (fetchMoreResult.posts.length === 0) {\n      setEndOfFeed(true);\n      return prev;\n    }\n\n    return {\n      posts: [...prev.posts, ...fetchMoreResult.posts]\n    };\n  }\n\n  React.useEffect(() => {\n    if (!isPageBottom || !data) return;\n    const lastTimestamp = data.posts[data.posts.length - 1].created_at;\n    const variables = {\n      limit: 2,\n      feedIds,\n      lastTimestamp\n    };\n    fetchMore({\n      variables,\n      updateQuery: handleUpdateQuery\n    });\n  }, [isPageBottom, data, handleUpdateQuery, fetchMore]);\n  if (loading) return React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, data.posts.map((post, idx) => React.createElement(React.Suspense, {\n    key: post.id,\n    fallback: React.createElement(FeedPostSkeleton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FeedPost, {\n    idx: idx,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })))), React.createElement(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.sidebarContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(UserCard, {\n    user: me,\n    avatarSize: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(FeedSideSuggestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))), !isEndOfFeed && React.createElement(LoadingLargeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n}\n\nexport default FeedPage;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/pages/feed.js"],"names":["React","useFeedPageStyles","Layout","UserCard","FeedSideSuggestions","getDefaultPost","Hidden","LoadingScreen","LoadingLargeIcon","FeedPostSkeleton","Zuck","UserContext","useQuery","GET_FEED","usePageBottom","FeedPost","lazy","FeedPage","classes","me","feedIds","useContext","isEndOfFeed","setEndOfFeed","useState","variables","limit","data","loading","fetchMore","isPageBottom","handleUpdateQuery","prev","fetchMoreResult","posts","length","useEffect","lastTimestamp","created_at","updateQuery","container","map","post","idx","id","sidebarContainer","sidebarWrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFeedPageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport UserCard from \"../components/shared/UserCard\";\n// import FeedPost from \"../components/feed/FeedPost\";\nimport FeedSideSuggestions from \"../components/feed/FeedSideSuggestions\";\nimport { getDefaultPost } from \"../data\";\nimport { Hidden } from \"@material-ui/core\";\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { LoadingLargeIcon } from \"../icons\";\nimport FeedPostSkeleton from \"../components/feed/FeedPostSkeleton\";\nimport Zuck from \"zuck.js\";\nimport { UserContext } from \"../App\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_FEED } from \"../graphql/queries\";\nimport usePageBottom from \"../utils/usePageBottom\";\nconst FeedPost = React.lazy(() => import(\"../components/feed/FeedPost\"));\n\nfunction FeedPage() {\n  const classes = useFeedPageStyles();\n  const { me, feedIds } = React.useContext(UserContext);\n  const [isEndOfFeed, setEndOfFeed] = React.useState(false);\n  const variables = { feedIds, limit: 2 };\n  const { data, loading, fetchMore } = useQuery(GET_FEED, { variables });\n  const isPageBottom = usePageBottom();\n\n  function handleUpdateQuery(prev, { fetchMoreResult }) {\n    if (fetchMoreResult.posts.length === 0) {\n      setEndOfFeed(true);\n      return prev;\n    }\n    return { posts: [...prev.posts, ...fetchMoreResult.posts] };\n  }\n\n  React.useEffect(() => {\n    if (!isPageBottom || !data) return;\n    const lastTimestamp = data.posts[data.posts.length - 1].created_at;\n    const variables = { limit: 2, feedIds, lastTimestamp };\n    fetchMore({\n      variables,\n      updateQuery: handleUpdateQuery\n    });\n  }, [isPageBottom, data, handleUpdateQuery, fetchMore]);\n\n  if (loading) return <LoadingScreen />;\n\n  return (\n    <Layout>\n      <div className={classes.container}>\n        {/* Feed Posts */}\n        <div>\n          {data.posts.map((post, idx) => (\n            <React.Suspense key={post.id} fallback={<FeedPostSkeleton />}>\n              <FeedPost idx={idx} post={post} />\n            </React.Suspense>\n          ))}\n        </div>\n        {/* Sidebar */}\n        <Hidden smDown>\n          <div className={classes.sidebarContainer}>\n            <div className={classes.sidebarWrapper}>\n              <UserCard user={me} avatarSize={50} />\n              <FeedSideSuggestions />\n            </div>\n          </div>\n        </Hidden>\n        {!isEndOfFeed && <LoadingLargeIcon />}\n      </div>\n    </Layout>\n  );\n}\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}