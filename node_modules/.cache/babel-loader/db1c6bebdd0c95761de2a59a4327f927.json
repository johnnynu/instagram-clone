{"ast":null,"code":"import { gql } from \"apollo-boost\";\nexport const CHECK_IF_USERNAME_TAKEN = gql`\n  query checkIfUsernameTaken($username: String!) {\n    users(where: { username: { _eq: $username } }) {\n      username\n    }\n  }\n`;\nexport const GET_USER_EMAIL = gql`\n  query getUserEmail($input: String!) {\n    users(\n      where: {\n        _or: [{ username: { _eq: $input } }, { phone_number: { _eq: $input } }]\n      }\n    ) {\n      email\n    }\n  }\n`;\nexport const GET_EDIT_USER_PROFILE = gql`\n  query getEditUserProfile($id: uuid!) {\n    users_by_pk(id: $id) {\n      id\n      username\n      name\n      email\n      bio\n      profile_image\n      website\n      phone_number\n    }\n  }\n`;\nexport const SEARCH_USERS = gql`\n  query searchUsers($query: String) {\n    users(\n      where: {\n        _or: [{ username: { _ilike: $query } }, { name: { _ilike: $query } }]\n      }\n    ) {\n      id\n      username\n      name\n      profile_image\n    }\n  }\n`;\nexport const GET_USER_PROFILE = gql`\n  query getUserProfile($username: String!) {\n    users(where: { username: { _eq: $username } }) {\n      id\n      name\n      username\n      website\n      bio\n      profile_image\n      posts_aggregate {\n        aggregate {\n          count\n        }\n      }\n      followers_aggregate {\n        aggregate {\n          count\n        }\n      }\n      following_aggregate {\n        aggregate {\n          count\n        }\n      }\n      saved_posts {\n        posts {\n          \n        }\n      }\n      posts {\n        id\n        media\n        likes_aggregate {\n          aggregate {\n            count\n          }\n        }\n        saved_posts_aggregate {\n          aggregate {\n            count\n          }\n        }\n        comments_aggregate {\n          aggregate {\n            count\n          }\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/graphql/queries.js"],"names":["gql","CHECK_IF_USERNAME_TAKEN","GET_USER_EMAIL","GET_EDIT_USER_PROFILE","SEARCH_USERS","GET_USER_PROFILE"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,uBAAuB,GAAGD,GAAI;;;;;;CAApC;AAQP,OAAO,MAAME,cAAc,GAAGF,GAAI;;;;;;;;;;CAA3B;AAYP,OAAO,MAAMG,qBAAqB,GAAGH,GAAI;;;;;;;;;;;;;CAAlC;AAeP,OAAO,MAAMI,YAAY,GAAGJ,GAAI;;;;;;;;;;;;;CAAzB;AAeP,OAAO,MAAMK,gBAAgB,GAAGL,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA7B","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const CHECK_IF_USERNAME_TAKEN = gql`\n  query checkIfUsernameTaken($username: String!) {\n    users(where: { username: { _eq: $username } }) {\n      username\n    }\n  }\n`;\n\nexport const GET_USER_EMAIL = gql`\n  query getUserEmail($input: String!) {\n    users(\n      where: {\n        _or: [{ username: { _eq: $input } }, { phone_number: { _eq: $input } }]\n      }\n    ) {\n      email\n    }\n  }\n`;\n\nexport const GET_EDIT_USER_PROFILE = gql`\n  query getEditUserProfile($id: uuid!) {\n    users_by_pk(id: $id) {\n      id\n      username\n      name\n      email\n      bio\n      profile_image\n      website\n      phone_number\n    }\n  }\n`;\n\nexport const SEARCH_USERS = gql`\n  query searchUsers($query: String) {\n    users(\n      where: {\n        _or: [{ username: { _ilike: $query } }, { name: { _ilike: $query } }]\n      }\n    ) {\n      id\n      username\n      name\n      profile_image\n    }\n  }\n`;\n\nexport const GET_USER_PROFILE = gql`\n  query getUserProfile($username: String!) {\n    users(where: { username: { _eq: $username } }) {\n      id\n      name\n      username\n      website\n      bio\n      profile_image\n      posts_aggregate {\n        aggregate {\n          count\n        }\n      }\n      followers_aggregate {\n        aggregate {\n          count\n        }\n      }\n      following_aggregate {\n        aggregate {\n          count\n        }\n      }\n      saved_posts {\n        posts {\n          \n        }\n      }\n      posts {\n        id\n        media\n        likes_aggregate {\n          aggregate {\n            count\n          }\n        }\n        saved_posts_aggregate {\n          aggregate {\n            count\n          }\n        }\n        comments_aggregate {\n          aggregate {\n            count\n          }\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}