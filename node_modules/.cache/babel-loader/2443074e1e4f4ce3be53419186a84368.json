{"ast":null,"code":"var _jsxFileName = \"/Users/johnnynguyen/instagram-clone/src/pages/edit-profile.js\";\nimport React from \"react\";\nimport { useEditProfilePageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport { IconButton, Button, Hidden, Drawer, List, ListItem, ListItemText, Typography, TextField } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport ProfilePicture from \"../components/shared/ProfilePicture\";\nimport { UserContext } from \"../App\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { GET_EDIT_USER_PROFILE } from \"../graphql/queries\";\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { useForm } from \"react-hook-form\";\nimport isURL from \"validator/lib/isURL\";\nimport isEmail from \"validator/lib/isEmail\";\nimport isMobilePhone from \"validator/lib/isMobilePhone\";\nimport { EDIT_USER } from \"../graphql/mutations\";\nimport { AuthContext } from \"../auth\";\n\nfunction EditProfilePage({\n  history\n}) {\n  const {\n    me,\n    currentUserId\n  } = React.useContext(UserContext);\n  const variables = {\n    id: currentUserId\n  };\n  const {\n    data,\n    loading\n  } = useQuery(GET_EDIT_USER_PROFILE, {\n    variables\n  });\n  console.log({\n    me,\n    currentUserId\n  });\n  const classes = useEditProfilePageStyles();\n  const path = history.location.pathname;\n  const [showDrawer, setDrawer] = React.useState(false);\n  if (loading) return React.createElement(LoadingScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n\n  function handleToggleDrawer() {\n    setDrawer(prev => !prev);\n  }\n\n  function handleSelected(index) {\n    switch (index) {\n      case 0:\n        return path.includes(\"edit\");\n\n      default:\n        break;\n    }\n  }\n\n  function handleListClick(index) {\n    switch (index) {\n      case 0:\n        history.push(\"/accounts/edit\");\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const options = [\"Edit Profile\", \"Change Password\", \"Apps and Websites\", \"Email and SMS\", \"Push Notifications\", \"Manage Contacts\", \"Privacy and Security\", \"Login Activity\", \"Emails from Instagram\"];\n  const drawer = React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, options.map((option, index) => React.createElement(ListItem, {\n    key: option,\n    button: true,\n    selected: handleSelected(index),\n    onClick: () => handleListClick(index),\n    classes: {\n      selected: classes.listItemSelected,\n      button: classes.listItemButton\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))));\n  return React.createElement(Layout, {\n    title: \"Edit Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    onClick: handleToggleDrawer,\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"left\",\n    open: showDrawer,\n    onClose: handleToggleDrawer,\n    classes: {\n      paperAnchorLeft: classes.temporaryDrawer\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, drawer)), React.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\",\n    className: classes.permanentDrawerRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classes.permanentDrawerPaper,\n      root: classes.permanentDrawerRoot\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, drawer))), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, path.includes(\"edit\") && React.createElement(EditUserInfo, {\n    user: data.users_by_pk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))));\n}\n\nconst DEFAULT_ERROR = {\n  type: \"\",\n  message: \"\"\n};\n\nfunction EditUserInfo({\n  user\n}) {\n  const classes = useEditProfilePageStyles();\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const {\n    updateEmail\n  } = React.useContext(AuthContext);\n  const [editUser] = useMutation(EDIT_USER);\n  const [error, setError] = React.useState(DEFAULT_ERROR);\n\n  async function onSubmit(data) {\n    try {\n      setError(DEFAULT_ERROR);\n      const variables = { ...data,\n        id: user.id\n      };\n      await updateEmail(data.email);\n      await editUser({\n        variables\n      });\n    } catch (error) {\n      console.error(\"Error updating profile\", error);\n      handleError(error);\n    }\n  }\n\n  function handleError(error) {\n    if (error.message.includes(\"users_username_key\")) {\n      setError({\n        type: \"username\",\n        message: \"Username already taken\"\n      });\n    } else if (error.code.includes(\"auth\")) {\n      setError({\n        type: \"email\",\n        message: error.message\n      });\n    }\n  }\n\n  return React.createElement(\"section\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.pictureSectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(ProfilePicture, {\n    size: 38,\n    image: user.profile_image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, user.username), React.createElement(Typography, {\n    color: \"primary\",\n    variant: \"body2\",\n    className: classes.typographyChangePic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Change Profile Photo\"))), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(SectionItem, {\n    name: \"name\",\n    inputRef: register({\n      required: true,\n      minLength: 5,\n      maxLength: 20\n    }),\n    text: \"Name\",\n    formItem: user.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    name: \"username\",\n    error: error,\n    inputRef: register({\n      required: true,\n      pattern: /^[a-zA-Z0-9_.]*$/,\n      minLength: 5,\n      maxLength: 20\n    }),\n    text: \"Username\",\n    formItem: user.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    name: \"website\",\n    inputRef: register({\n      validate: input => Boolean(input) ? isURL(input, {\n        protocols: [\"http\", \"https\"],\n        require_protocol: true\n      }) : true\n    }),\n    text: \"Website\",\n    formItem: user.website,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Bio\")), React.createElement(TextField, {\n    name: \"bio\",\n    inputRef: register({\n      maxLength: 120\n    }),\n    variant: \"outlined\",\n    multiline: true,\n    rowsMax: 3,\n    rows: 3,\n    fullWidth: true,\n    defaultValue: user.bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Personal Information\")), React.createElement(SectionItem, {\n    name: \"email\",\n    error: error,\n    inputRef: register({\n      required: true,\n      validate: input => isEmail(input)\n    }),\n    text: \"Email\",\n    formItem: user.email,\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), React.createElement(SectionItem, {\n    name: \"phoneNumber\",\n    inputRef: register({\n      validate: input => Boolean(input) ? isMobilePhone(input) : true\n    }),\n    text: \"Phone Number\",\n    formItem: user.phone_number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.sectionItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.justifySelfStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Submit\"))));\n}\n\nfunction SectionItem({\n  type = \"text\",\n  text,\n  formItem,\n  inputRef,\n  name,\n  error\n}) {\n  const classes = useEditProfilePageStyles();\n  return React.createElement(\"div\", {\n    className: classes.sectionItemWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, text)), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, text))), React.createElement(TextField, {\n    name: name,\n    inputRef: inputRef,\n    helperText: (error === null || error === void 0 ? void 0 : error.type) === name && error.message,\n    variant: \"outlined\",\n    fullWidth: true,\n    defaultValue: formItem,\n    type: type,\n    className: classes.textField,\n    inputProps: {\n      className: classes.textFieldInput\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }));\n}\n\nexport default EditProfilePage;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/pages/edit-profile.js"],"names":["React","useEditProfilePageStyles","Layout","IconButton","Button","Hidden","Drawer","List","ListItem","ListItemText","Typography","TextField","Menu","ProfilePicture","UserContext","useQuery","useMutation","GET_EDIT_USER_PROFILE","LoadingScreen","useForm","isURL","isEmail","isMobilePhone","EDIT_USER","AuthContext","EditProfilePage","history","me","currentUserId","useContext","variables","id","data","loading","console","log","classes","path","location","pathname","showDrawer","setDrawer","useState","handleToggleDrawer","prev","handleSelected","index","includes","handleListClick","push","options","drawer","map","option","selected","listItemSelected","button","listItemButton","section","menuButton","paperAnchorLeft","temporaryDrawer","permanentDrawerRoot","paper","permanentDrawerPaper","root","users_by_pk","DEFAULT_ERROR","type","message","EditUserInfo","user","register","handleSubmit","mode","updateEmail","editUser","error","setError","onSubmit","email","handleError","code","container","pictureSectionItem","profile_image","justifySelfStart","typography","username","typographyChangePic","form","required","minLength","maxLength","name","pattern","validate","input","Boolean","protocols","require_protocol","website","sectionItem","bio","phone_number","SectionItem","text","formItem","inputRef","sectionItemWrapper","textField","className","textFieldInput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEditProfilePageStyles } from \"../styles\";\nimport Layout from \"../components/shared/Layout\";\nimport {\n  IconButton,\n  Button,\n  Hidden,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  TextField\n} from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport ProfilePicture from \"../components/shared/ProfilePicture\";\nimport { UserContext } from \"../App\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { GET_EDIT_USER_PROFILE } from \"../graphql/queries\";\nimport LoadingScreen from \"../components/shared/LoadingScreen\";\nimport { useForm } from \"react-hook-form\";\nimport isURL from \"validator/lib/isURL\";\nimport isEmail from \"validator/lib/isEmail\";\nimport isMobilePhone from \"validator/lib/isMobilePhone\";\nimport { EDIT_USER } from \"../graphql/mutations\";\nimport { AuthContext } from \"../auth\";\n\nfunction EditProfilePage({ history }) {\n  const { me, currentUserId } = React.useContext(UserContext);\n  const variables = { id: currentUserId };\n  const { data, loading } = useQuery(GET_EDIT_USER_PROFILE, { variables });\n  console.log({ me, currentUserId });\n  const classes = useEditProfilePageStyles();\n  const path = history.location.pathname;\n  const [showDrawer, setDrawer] = React.useState(false);\n\n  if (loading) return <LoadingScreen />;\n\n  function handleToggleDrawer() {\n    setDrawer(prev => !prev);\n  }\n\n  function handleSelected(index) {\n    switch (index) {\n      case 0:\n        return path.includes(\"edit\");\n      default:\n        break;\n    }\n  }\n\n  function handleListClick(index) {\n    switch (index) {\n      case 0:\n        history.push(\"/accounts/edit\");\n        break;\n      default:\n        break;\n    }\n  }\n\n  const options = [\n    \"Edit Profile\",\n    \"Change Password\",\n    \"Apps and Websites\",\n    \"Email and SMS\",\n    \"Push Notifications\",\n    \"Manage Contacts\",\n    \"Privacy and Security\",\n    \"Login Activity\",\n    \"Emails from Instagram\"\n  ];\n\n  const drawer = (\n    <List>\n      {options.map((option, index) => (\n        <ListItem\n          key={option}\n          button\n          selected={handleSelected(index)}\n          onClick={() => handleListClick(index)}\n          classes={{\n            selected: classes.listItemSelected,\n            button: classes.listItemButton\n          }}\n        >\n          <ListItemText primary={option} />\n        </ListItem>\n      ))}\n    </List>\n  );\n\n  return (\n    <Layout title=\"Edit Profile\">\n      <section className={classes.section}>\n        <IconButton\n          edge=\"start\"\n          onClick={handleToggleDrawer}\n          className={classes.menuButton}\n        >\n          <Menu />\n        </IconButton>\n        <nav>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              variant=\"temporary\"\n              anchor=\"left\"\n              open={showDrawer}\n              onClose={handleToggleDrawer}\n              classes={{ paperAnchorLeft: classes.temporaryDrawer }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden\n            xsDown\n            implementation=\"css\"\n            className={classes.permanentDrawerRoot}\n          >\n            <Drawer\n              variant=\"permanent\"\n              open\n              classes={{\n                paper: classes.permanentDrawerPaper,\n                root: classes.permanentDrawerRoot\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main>\n          {path.includes(\"edit\") && <EditUserInfo user={data.users_by_pk} />}\n        </main>\n      </section>\n    </Layout>\n  );\n}\n\nconst DEFAULT_ERROR = { type: \"\", message: \"\" };\n\nfunction EditUserInfo({ user }) {\n  const classes = useEditProfilePageStyles();\n  const { register, handleSubmit } = useForm({ mode: \"onBlur\" });\n  const { updateEmail } = React.useContext(AuthContext);\n  const [editUser] = useMutation(EDIT_USER);\n  const [error, setError] = React.useState(DEFAULT_ERROR);\n\n  async function onSubmit(data) {\n    try {\n      setError(DEFAULT_ERROR);\n      const variables = { ...data, id: user.id };\n      await updateEmail(data.email);\n      await editUser({ variables });\n    } catch (error) {\n      console.error(\"Error updating profile\", error);\n      handleError(error);\n    }\n  }\n\n  function handleError(error) {\n    if (error.message.includes(\"users_username_key\")) {\n      setError({ type: \"username\", message: \"Username already taken\" });\n    } else if (error.code.includes(\"auth\")) {\n      setError({ type: \"email\", message: error.message });\n    }\n  }\n\n  return (\n    <section className={classes.container}>\n      <div className={classes.pictureSectionItem}>\n        <ProfilePicture size={38} image={user.profile_image} />\n        <div className={classes.justifySelfStart}>\n          <Typography className={classes.typography}>\n            {user.username}\n          </Typography>\n          <Typography\n            color=\"primary\"\n            variant=\"body2\"\n            className={classes.typographyChangePic}\n          >\n            Change Profile Photo\n          </Typography>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n        <SectionItem\n          name=\"name\"\n          inputRef={register({\n            required: true,\n            minLength: 5,\n            maxLength: 20\n          })}\n          text=\"Name\"\n          formItem={user.name}\n        />\n        <SectionItem\n          name=\"username\"\n          error={error}\n          inputRef={register({\n            required: true,\n            pattern: /^[a-zA-Z0-9_.]*$/,\n            minLength: 5,\n            maxLength: 20\n          })}\n          text=\"Username\"\n          formItem={user.username}\n        />\n        <SectionItem\n          name=\"website\"\n          inputRef={register({\n            validate: input =>\n              Boolean(input)\n                ? isURL(input, {\n                    protocols: [\"http\", \"https\"],\n                    require_protocol: true\n                  })\n                : true\n          })}\n          text=\"Website\"\n          formItem={user.website}\n        />\n        <div className={classes.sectionItem}>\n          <aside>\n            <Typography className={classes.bio}>Bio</Typography>\n          </aside>\n          <TextField\n            name=\"bio\"\n            inputRef={register({\n              maxLength: 120\n            })}\n            variant=\"outlined\"\n            multiline\n            rowsMax={3}\n            rows={3}\n            fullWidth\n            defaultValue={user.bio}\n          />\n        </div>\n        <div className={classes.sectionItem}>\n          <div />\n          <Typography\n            color=\"textSecondary\"\n            className={classes.justifySelfStart}\n          >\n            Personal Information\n          </Typography>\n        </div>\n        <SectionItem\n          name=\"email\"\n          error={error}\n          inputRef={register({\n            required: true,\n            validate: input => isEmail(input)\n          })}\n          text=\"Email\"\n          formItem={user.email}\n          type=\"email\"\n        />\n        <SectionItem\n          name=\"phoneNumber\"\n          inputRef={register({\n            validate: input => (Boolean(input) ? isMobilePhone(input) : true)\n          })}\n          text=\"Phone Number\"\n          formItem={user.phone_number}\n        />\n        <div className={classes.sectionItem}>\n          <div />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.justifySelfStart}\n          >\n            Submit\n          </Button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nfunction SectionItem({ type = \"text\", text, formItem, inputRef, name, error }) {\n  const classes = useEditProfilePageStyles();\n\n  return (\n    <div className={classes.sectionItemWrapper}>\n      <aside>\n        <Hidden xsDown>\n          <Typography className={classes.typography} align=\"right\">\n            {text}\n          </Typography>\n        </Hidden>\n        <Hidden smUp>\n          <Typography className={classes.typography}>{text}</Typography>\n        </Hidden>\n      </aside>\n      <TextField\n        name={name}\n        inputRef={inputRef}\n        helperText={error?.type === name && error.message}\n        variant=\"outlined\"\n        fullWidth\n        defaultValue={formItem}\n        type={type}\n        className={classes.textField}\n        inputProps={{\n          className: classes.textFieldInput\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EditProfilePage;\n"]},"metadata":{},"sourceType":"module"}