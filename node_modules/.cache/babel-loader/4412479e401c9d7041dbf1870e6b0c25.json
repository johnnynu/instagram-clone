{"ast":null,"code":"import { gql } from \"apollo-boost\";\nexport const CREATE_USER = gql`\n  mutation createUsers(\n    $userId: String!\n    $name: String!\n    $username: String!\n    $email: String!\n    $bio: String!\n    $website: String!\n    $profileImage: String!\n    $phoneNumber: String!\n  ) {\n    insert_users(\n      objects: {\n        user_id: $userId\n        username: $username\n        website: $website\n        profile_image: $profileImage\n        phone_number: $phoneNumber\n        name: $name\n        email: $email\n        bio: $bio\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport const EDIT_USER = gql`\n  mutation editUser(\n    $id: uuid!\n    $name: String!\n    $username: String!\n    $website: String!\n    $bio: String!\n    $email: String!\n    $phoneNumber: String!\n  ) {\n    update_users(\n      where: { id: { _eq: $id } }\n      _set: {\n        name: $name\n        username: $username\n        website: $website\n        bio: $bio\n        email: $email\n        phone_number: $phoneNumber\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport const EDIT_USER_AVATAR = gql`\n  mutation editUserAvatar($id: uuid!, $profileImage: String!) {\n    update_users(\n      where: { id: { _eq: $id } }\n      _set: { profile_image: $profileImage }\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport const CREATE_POST = gql`\n  mutation createPost(\n    $userId: uuid!\n    $media: String!\n    $location: String!\n    $caption: String!\n  ) {\n    insert_posts(\n      objects: {\n        user_id: $userId\n        media: $media\n        location: $location\n        caption: $caption\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport const LIKE_POST = gql`\n  mutation likePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n    insert_likes(objects: { post_id: $postId, user_id: $userId }) {\n      __typename\n    }\n    insert_notifications(\n      objects: {\n        post_id: $postId\n        user_id: $userId\n        profile_id: $profileId\n        type: \"like\"\n      }\n    ) {\n      affected_rows\n    }\n    delete_notifications(\n      where: {\n        post_id: { _eq: $postId }\n        profile_id: { _eq: $profileId }\n        user_id: { _eq: $userId }\n        type: { _eq: \"like\" }\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport const UNLIKE_POST = gql`\n  mutation unlikePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n    delete_likes(\n      where: { post_id: { _eq: $postId }, user_id: { _eq: $userId } }\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport const SAVE_POST = gql`\n  mutation savePost($postId: uuid!, $userId: uuid!) {\n    insert_saved_posts(objects: { post_id: $postId, user_id: $userId }) {\n      affected_rows\n    }\n  }\n`;\nexport const UNSAVE_POST = gql`\n  mutation unsavePost($postId: uuid!, $userId: uuid!) {\n    delete_saved_posts(\n      where: { post_id: { _eq: $postId }, user_id: { _eq: $userId } }\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport const CREATE_COMMENT = gql`\n  mutation createComment($postId: uuid!, $userId: uuid!, $content: String!) {\n    insert_comments(\n      objects: { post_id: $postId, user_id: $userId, content: $content }\n    ) {\n      affected_rows\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/graphql/mutations.js"],"names":["gql","CREATE_USER","EDIT_USER","EDIT_USER_AVATAR","CREATE_POST","LIKE_POST","UNLIKE_POST","SAVE_POST","UNSAVE_POST","CREATE_COMMENT"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;CAAxB;AA4BP,OAAO,MAAME,SAAS,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AA0BP,OAAO,MAAMG,gBAAgB,GAAGH,GAAI;;;;;;;;;CAA7B;AAWP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;;;;;;;;;;;;;;;;;;CAAxB;AAoBP,OAAO,MAAMK,SAAS,GAAGL,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AA4BP,OAAO,MAAMM,WAAW,GAAGN,GAAI;;;;;;;;CAAxB;AAUP,OAAO,MAAMO,SAAS,GAAGP,GAAI;;;;;;CAAtB;AAQP,OAAO,MAAMQ,WAAW,GAAGR,GAAI;;;;;;;;CAAxB;AAUP,OAAO,MAAMS,cAAc,GAAGT,GAAI;;;;;;;;CAA3B","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const CREATE_USER = gql`\n  mutation createUsers(\n    $userId: String!\n    $name: String!\n    $username: String!\n    $email: String!\n    $bio: String!\n    $website: String!\n    $profileImage: String!\n    $phoneNumber: String!\n  ) {\n    insert_users(\n      objects: {\n        user_id: $userId\n        username: $username\n        website: $website\n        profile_image: $profileImage\n        phone_number: $phoneNumber\n        name: $name\n        email: $email\n        bio: $bio\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const EDIT_USER = gql`\n  mutation editUser(\n    $id: uuid!\n    $name: String!\n    $username: String!\n    $website: String!\n    $bio: String!\n    $email: String!\n    $phoneNumber: String!\n  ) {\n    update_users(\n      where: { id: { _eq: $id } }\n      _set: {\n        name: $name\n        username: $username\n        website: $website\n        bio: $bio\n        email: $email\n        phone_number: $phoneNumber\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const EDIT_USER_AVATAR = gql`\n  mutation editUserAvatar($id: uuid!, $profileImage: String!) {\n    update_users(\n      where: { id: { _eq: $id } }\n      _set: { profile_image: $profileImage }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const CREATE_POST = gql`\n  mutation createPost(\n    $userId: uuid!\n    $media: String!\n    $location: String!\n    $caption: String!\n  ) {\n    insert_posts(\n      objects: {\n        user_id: $userId\n        media: $media\n        location: $location\n        caption: $caption\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const LIKE_POST = gql`\n  mutation likePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n    insert_likes(objects: { post_id: $postId, user_id: $userId }) {\n      __typename\n    }\n    insert_notifications(\n      objects: {\n        post_id: $postId\n        user_id: $userId\n        profile_id: $profileId\n        type: \"like\"\n      }\n    ) {\n      affected_rows\n    }\n    delete_notifications(\n      where: {\n        post_id: { _eq: $postId }\n        profile_id: { _eq: $profileId }\n        user_id: { _eq: $userId }\n        type: { _eq: \"like\" }\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const UNLIKE_POST = gql`\n  mutation unlikePost($postId: uuid!, $userId: uuid!, $profileId: uuid!) {\n    delete_likes(\n      where: { post_id: { _eq: $postId }, user_id: { _eq: $userId } }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const SAVE_POST = gql`\n  mutation savePost($postId: uuid!, $userId: uuid!) {\n    insert_saved_posts(objects: { post_id: $postId, user_id: $userId }) {\n      affected_rows\n    }\n  }\n`;\n\nexport const UNSAVE_POST = gql`\n  mutation unsavePost($postId: uuid!, $userId: uuid!) {\n    delete_saved_posts(\n      where: { post_id: { _eq: $postId }, user_id: { _eq: $userId } }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation createComment($postId: uuid!, $userId: uuid!, $content: String!) {\n    insert_comments(\n      objects: { post_id: $postId, user_id: $userId, content: $content }\n    ) {\n      affected_rows\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}