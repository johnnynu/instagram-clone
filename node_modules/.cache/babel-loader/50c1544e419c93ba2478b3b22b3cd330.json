{"ast":null,"code":"import { gql } from \"apollo-boost\";\nexport const ME = gql`\n  subscription me($userId: String) {\n    users(where: { user_id: { _eq: $userId } }) {\n      id\n      user_id\n      name\n      username\n      profile_image\n      last_checked\n    }\n    notifications(order_by: { created_at: desc }) {\n      id\n      type\n      created_at\n      post {\n        id\n        media\n      }\n      user {\n        id\n        username\n        profile_image\n      }\n    }\n  }\n  }\n\n  }\n`;\nexport const GET_POST = gql`\n  subscription getPost($postId: uuid!) {\n    posts_by_pk(id: $postId) {\n      id\n      caption\n      created_at\n      media\n      location\n      user {\n        id\n        username\n        name\n        profile_image\n      }\n      likes_aggregate {\n        aggregate {\n          count\n        }\n      }\n      likes {\n        id\n        user_id\n      }\n      saved_posts {\n        id\n        user_id\n      }\n      comments(order_by: { created_at: desc, user: { username: asc } }) {\n        id\n        content\n        created_at\n        user {\n          username\n          profile_image\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/graphql/subscriptions.js"],"names":["gql","ME","GET_POST"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,EAAE,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAf;AA8BP,OAAO,MAAME,QAAQ,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAArB","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const ME = gql`\n  subscription me($userId: String) {\n    users(where: { user_id: { _eq: $userId } }) {\n      id\n      user_id\n      name\n      username\n      profile_image\n      last_checked\n    }\n    notifications(order_by: { created_at: desc }) {\n      id\n      type\n      created_at\n      post {\n        id\n        media\n      }\n      user {\n        id\n        username\n        profile_image\n      }\n    }\n  }\n  }\n\n  }\n`;\n\nexport const GET_POST = gql`\n  subscription getPost($postId: uuid!) {\n    posts_by_pk(id: $postId) {\n      id\n      caption\n      created_at\n      media\n      location\n      user {\n        id\n        username\n        name\n        profile_image\n      }\n      likes_aggregate {\n        aggregate {\n          count\n        }\n      }\n      likes {\n        id\n        user_id\n      }\n      saved_posts {\n        id\n        user_id\n      }\n      comments(order_by: { created_at: desc, user: { username: asc } }) {\n        id\n        content\n        created_at\n        user {\n          username\n          profile_image\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}