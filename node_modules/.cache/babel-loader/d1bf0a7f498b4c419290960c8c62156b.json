{"ast":null,"code":"var _jsxFileName = \"/Users/johnnynguyen/instagram-clone/src/components/shared/Navbar.js\";\nimport React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport { AppBar, InputBase, Hidden, Avatar, Typography, Grid, Fade, Zoom } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../images/logo.png\";\nimport { LoadingIcon, AddIcon, LikeIcon, LikeActiveIcon, ExploreIcon, ExploreActiveIcon, HomeIcon, HomeActiveIcon } from \"../../icons\";\nimport NotificationTooltip from \"../notification/NotificationTooltip\";\nimport NotificationList from \"../notification/NotificationList\";\nimport { useNProgress } from \"@tanem/react-nprogress\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\nimport { SEARCH_USERS } from \"../../graphql/queries\";\nimport { UserContext } from \"../../App\";\nimport AddPostDialog from \"../post/AddPostDialog\";\nimport { isAfter } from \"date-fns\";\n\nfunction Navbar({\n  minimalNavbar\n}) {\n  const classes = useNavbarStyles();\n  const history = useHistory();\n  const [isLoadingPage, setLoadingPage] = React.useState(true);\n  const path = history.location.pathname;\n  React.useEffect(() => {\n    setLoadingPage(false);\n  }, [path]);\n  return React.createElement(React.Fragment, null, React.createElement(Progress, {\n    isAnimating: isLoadingPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), !minimalNavbar && React.createElement(Search, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), !minimalNavbar && React.createElement(Links, {\n    path: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))));\n}\n\nfunction Logo() {\n  const classes = useNavbarStyles();\n  return React.createElement(\"div\", {\n    className: classes.logoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"Instagram\",\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))));\n}\n\nfunction Search({\n  history\n}) {\n  const classes = useNavbarStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [results, setResults] = React.useState([]);\n  const [query, setQuery] = React.useState(\"\");\n  const [searchUsers, {\n    data\n  }] = useLazyQuery(SEARCH_USERS);\n  const hasResults = Boolean(query) && results.length > 0;\n  React.useEffect(() => {\n    if (!query.trim()) return;\n    setLoading(true);\n    const variables = {\n      query: `%${query}%`\n    };\n    searchUsers({\n      variables\n    });\n\n    if (data) {\n      setResults(data.users);\n      setLoading(false);\n    } // setResults(Array.from({ length: 5 }, () => getDefaultUser()));\n\n  }, [query, data, searchUsers]);\n\n  function handleClearInput() {\n    setQuery(\"\");\n  }\n\n  return React.createElement(Hidden, {\n    only: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(WhiteTooltip, {\n    arrow: true,\n    interactive: true,\n    TransitionComponent: Fade,\n    open: hasResults,\n    title: hasResults && React.createElement(Grid, {\n      className: classes.resultContainer,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, results.map(result => React.createElement(Grid, {\n      key: result.id,\n      item: true,\n      className: classes.resultLink,\n      onClick: () => {\n        history.push(`/${result.username}`);\n        handleClearInput();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.resultWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.avatarWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      src: result.profile_image,\n      alt: \"user avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.nameWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, result.username), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, result.name)))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(InputBase, {\n    className: classes.input,\n    onChange: event => setQuery(event.target.value),\n    startAdornment: React.createElement(\"span\", {\n      className: classes.searchIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }),\n    endAdornment: loading ? React.createElement(LoadingIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      onClick: handleClearInput,\n      className: classes.clearIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }),\n    placeholder: \"Search\",\n    value: query,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })));\n}\n\nfunction Links({\n  path\n}) {\n  const {\n    me\n  } = React.useContext(UserContext);\n  const newNotifications = me.notifications.filter(({\n    created_at\n  }) => isAfter(new Date(created_at), new Date(me.last_checked)));\n  const hasNotifications = newNotifications.length > 0;\n  const classes = useNavbarStyles();\n  const [showList, setList] = React.useState(false);\n  const [showToolTip, setToolTip] = React.useState(hasNotifications);\n  const [media, setMedia] = React.useState(null);\n  const [showAddPostDialog, setAddPostDialog] = React.useState(false);\n  const inputRef = React.useRef();\n  React.useEffect(() => {\n    const timeout = setTimeout(handleHideTooltip, 5000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  function handleToggleList() {\n    setList(prev => !prev);\n  }\n\n  function handleHideTooltip() {\n    setToolTip(false);\n  }\n\n  function handleHideList() {\n    setList(false);\n  }\n\n  function openFileInput() {\n    inputRef.current.click();\n  }\n\n  function handleAddPost(event) {\n    setMedia(event.target.files[0]);\n    setAddPostDialog(true);\n  }\n\n  function handleClose() {\n    setAddPostDialog(false);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.linksContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, showList && React.createElement(NotificationList, {\n    notifications: me.notifications,\n    handleHideList: handleHideList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.linksWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, showAddPostDialog && React.createElement(AddPostDialog, {\n    media: media,\n    handleClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    ref: inputRef,\n    onChange: handleAddPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(AddIcon, {\n    onClick: openFileInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, path === \"/\" ? React.createElement(HomeActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }) : React.createElement(HomeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/explore\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, path === \"/explore\" ? React.createElement(ExploreActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }) : React.createElement(ExploreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(RedTooltip, {\n    arrow: true,\n    open: showToolTip,\n    onOpen: handleHideTooltip,\n    TransitionComponent: Zoom,\n    title: React.createElement(NotificationTooltip, {\n      notifications: newNotifications,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.notifications,\n    onClick: handleToggleList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, showList ? React.createElement(LikeActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }) : React.createElement(LikeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }))), React.createElement(Link, {\n    to: `/${me.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: path === `/${me.username}` ? classes.profileActive : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    src: me.profile_image,\n    className: classes.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }))));\n}\n\nfunction Progress({\n  isAnimating\n}) {\n  const classes = useNavbarStyles();\n  const {\n    animationDuration,\n    isFinished,\n    progress\n  } = useNProgress({\n    isAnimating\n  });\n  return React.createElement(\"div\", {\n    className: classes.progressContainer,\n    style: {\n      opacity: isFinished ? 0 : 1,\n      transition: `opacity ${animationDuration}ms linear`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.progressBar,\n    style: {\n      marginLeft: `${(-1 + progress) * 100}%`,\n      transition: `margin-left ${animationDuration}ms linear`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.progressBackground,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  })));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/johnnynguyen/instagram-clone/src/components/shared/Navbar.js"],"names":["React","useNavbarStyles","WhiteTooltip","RedTooltip","AppBar","InputBase","Hidden","Avatar","Typography","Grid","Fade","Zoom","Link","useHistory","logo","LoadingIcon","AddIcon","LikeIcon","LikeActiveIcon","ExploreIcon","ExploreActiveIcon","HomeIcon","HomeActiveIcon","NotificationTooltip","NotificationList","useNProgress","useLazyQuery","SEARCH_USERS","UserContext","AddPostDialog","isAfter","Navbar","minimalNavbar","classes","history","isLoadingPage","setLoadingPage","useState","path","location","pathname","useEffect","appBar","section","Logo","logoContainer","logoWrapper","Search","loading","setLoading","results","setResults","query","setQuery","searchUsers","data","hasResults","Boolean","length","trim","variables","users","handleClearInput","resultContainer","map","result","id","resultLink","push","username","resultWrapper","avatarWrapper","profile_image","nameWrapper","name","input","event","target","value","searchIcon","clearIcon","Links","me","useContext","newNotifications","notifications","filter","created_at","Date","last_checked","hasNotifications","showList","setList","showToolTip","setToolTip","media","setMedia","showAddPostDialog","setAddPostDialog","inputRef","useRef","timeout","setTimeout","handleHideTooltip","clearTimeout","handleToggleList","prev","handleHideList","openFileInput","current","click","handleAddPost","files","handleClose","linksContainer","linksWrapper","display","profileActive","profileImage","Progress","isAnimating","animationDuration","isFinished","progress","progressContainer","opacity","transition","progressBar","marginLeft","progressBackground"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport {\n  AppBar,\n  InputBase,\n  Hidden,\n  Avatar,\n  Typography,\n  Grid,\n  Fade,\n  Zoom\n} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../images/logo.png\";\nimport {\n  LoadingIcon,\n  AddIcon,\n  LikeIcon,\n  LikeActiveIcon,\n  ExploreIcon,\n  ExploreActiveIcon,\n  HomeIcon,\n  HomeActiveIcon\n} from \"../../icons\";\nimport NotificationTooltip from \"../notification/NotificationTooltip\";\nimport NotificationList from \"../notification/NotificationList\";\nimport { useNProgress } from \"@tanem/react-nprogress\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\nimport { SEARCH_USERS } from \"../../graphql/queries\";\nimport { UserContext } from \"../../App\";\nimport AddPostDialog from \"../post/AddPostDialog\";\nimport { isAfter } from \"date-fns\";\n\nfunction Navbar({ minimalNavbar }) {\n  const classes = useNavbarStyles();\n  const history = useHistory();\n  const [isLoadingPage, setLoadingPage] = React.useState(true);\n  const path = history.location.pathname;\n\n  React.useEffect(() => {\n    setLoadingPage(false);\n  }, [path]);\n\n  return (\n    <>\n      <Progress isAnimating={isLoadingPage} />\n      <AppBar className={classes.appBar}>\n        <section className={classes.section}>\n          <Logo />\n          {!minimalNavbar && <Search history={history} />}\n          {!minimalNavbar && <Links path={path} />}\n        </section>\n      </AppBar>\n    </>\n  );\n}\n\nfunction Logo() {\n  const classes = useNavbarStyles();\n\n  return (\n    <div className={classes.logoContainer}>\n      <Link to=\"/\">\n        <div className={classes.logoWrapper}>\n          <img src={logo} alt=\"Instagram\" className={classes.logo} />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nfunction Search({ history }) {\n  const classes = useNavbarStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [results, setResults] = React.useState([]);\n  const [query, setQuery] = React.useState(\"\");\n  const [searchUsers, { data }] = useLazyQuery(SEARCH_USERS);\n\n  const hasResults = Boolean(query) && results.length > 0;\n\n  React.useEffect(() => {\n    if (!query.trim()) return;\n    setLoading(true);\n    const variables = { query: `%${query}%` };\n    searchUsers({ variables });\n    if (data) {\n      setResults(data.users);\n      setLoading(false);\n    }\n    // setResults(Array.from({ length: 5 }, () => getDefaultUser()));\n  }, [query, data, searchUsers]);\n\n  function handleClearInput() {\n    setQuery(\"\");\n  }\n\n  return (\n    <Hidden only=\"xs\">\n      <WhiteTooltip\n        arrow\n        interactive\n        TransitionComponent={Fade}\n        open={hasResults}\n        title={\n          hasResults && (\n            <Grid className={classes.resultContainer} container>\n              {results.map(result => (\n                <Grid\n                  key={result.id}\n                  item\n                  className={classes.resultLink}\n                  onClick={() => {\n                    history.push(`/${result.username}`);\n                    handleClearInput();\n                  }}\n                >\n                  <div className={classes.resultWrapper}>\n                    <div className={classes.avatarWrapper}>\n                      <Avatar src={result.profile_image} alt=\"user avatar\" />\n                    </div>\n                    <div className={classes.nameWrapper}>\n                      <Typography variant=\"body1\">{result.username}</Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {result.name}\n                      </Typography>\n                    </div>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          )\n        }\n      >\n        <InputBase\n          className={classes.input}\n          onChange={event => setQuery(event.target.value)}\n          startAdornment={<span className={classes.searchIcon} />}\n          endAdornment={\n            loading ? (\n              <LoadingIcon />\n            ) : (\n              <span onClick={handleClearInput} className={classes.clearIcon} />\n            )\n          }\n          placeholder=\"Search\"\n          value={query}\n        />\n      </WhiteTooltip>\n    </Hidden>\n  );\n}\n\nfunction Links({ path }) {\n  const { me } = React.useContext(UserContext);\n  const newNotifications = me.notifications.filter(({ created_at }) =>\n    isAfter(new Date(created_at), new Date(me.last_checked))\n  );\n  const hasNotifications = newNotifications.length > 0;\n  const classes = useNavbarStyles();\n  const [showList, setList] = React.useState(false);\n  const [showToolTip, setToolTip] = React.useState(hasNotifications);\n  const [media, setMedia] = React.useState(null);\n  const [showAddPostDialog, setAddPostDialog] = React.useState(false);\n  const inputRef = React.useRef();\n\n  React.useEffect(() => {\n    const timeout = setTimeout(handleHideTooltip, 5000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  function handleToggleList() {\n    setList(prev => !prev);\n  }\n\n  function handleHideTooltip() {\n    setToolTip(false);\n  }\n\n  function handleHideList() {\n    setList(false);\n  }\n\n  function openFileInput() {\n    inputRef.current.click();\n  }\n\n  function handleAddPost(event) {\n    setMedia(event.target.files[0]);\n    setAddPostDialog(true);\n  }\n\n  function handleClose() {\n    setAddPostDialog(false);\n  }\n\n  return (\n    <div className={classes.linksContainer}>\n      {showList && (\n        <NotificationList\n          notifications={me.notifications}\n          handleHideList={handleHideList}\n        />\n      )}\n      <div className={classes.linksWrapper}>\n        {showAddPostDialog && (\n          <AddPostDialog media={media} handleClose={handleClose} />\n        )}\n        <Hidden xsDown>\n          <input\n            type=\"file\"\n            style={{ display: \"none\" }}\n            ref={inputRef}\n            onChange={handleAddPost}\n          />\n          <AddIcon onClick={openFileInput} />\n        </Hidden>\n        <Link to=\"/\">{path === \"/\" ? <HomeActiveIcon /> : <HomeIcon />}</Link>\n        <Link to=\"/explore\">\n          {path === \"/explore\" ? <ExploreActiveIcon /> : <ExploreIcon />}\n        </Link>\n        <RedTooltip\n          arrow\n          open={showToolTip}\n          onOpen={handleHideTooltip}\n          TransitionComponent={Zoom}\n          title={<NotificationTooltip notifications={newNotifications} />}\n        >\n          <div className={classes.notifications} onClick={handleToggleList}>\n            {showList ? <LikeActiveIcon /> : <LikeIcon />}\n          </div>\n        </RedTooltip>\n        <Link to={`/${me.username}`}>\n          <div\n            className={path === `/${me.username}` ? classes.profileActive : \"\"}\n          ></div>\n          <Avatar src={me.profile_image} className={classes.profileImage} />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nfunction Progress({ isAnimating }) {\n  const classes = useNavbarStyles();\n  const { animationDuration, isFinished, progress } = useNProgress({\n    isAnimating\n  });\n\n  return (\n    <div\n      className={classes.progressContainer}\n      style={{\n        opacity: isFinished ? 0 : 1,\n        transition: `opacity ${animationDuration}ms linear`\n      }}\n    >\n      <div\n        className={classes.progressBar}\n        style={{\n          marginLeft: `${(-1 + progress) * 100}%`,\n          transition: `margin-left ${animationDuration}ms linear`\n        }}\n      >\n        <div className={classes.progressBackground} />\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}